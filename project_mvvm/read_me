
1、项目采用mvvm架构

2、主要使用jetpack组件 room + viewmodel+ livedata

3、项目遵循谷歌最新的repack框架的数据驱动链去对数据的观察

4、主要的层级结构是：view +viewmodel +resposity （room + http）

5、没有使用到的databinding 、paging ，后续做项目重构优化

6、以后的项目架构的设计是：
存数据：从http 拿到数据，更新room ，更新到view中
取数据：view ，去room中拿缓存本地数据，不涉及网络，加快ui的显示

7、增加navigation代码

8、搭建自己的全局通信框架，弃用EventBus


git 开发笔记

git init
git remote add origin url    本地仓库跟远程关联

git config --global user.name ""
git config --global user.email ""
git config --list
git config core.ignorecase false   不要忽略大小写

git pull --rebase
git reset --hard 提交记录




