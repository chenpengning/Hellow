
1、Android手机屏幕适配方案

01、使用dp作为长度单位值，与手机实际像素无关的单位





2、使用dp做单位还有哪些问题？

（1）因为dp的计算公式  px = （dpi/160）* dp  ， dpi = (s*s + h*h)开根号/ in
（2）由于每个手机厂商高度定制化，每个手机尺寸不一样，导致dpi 与标准有差异，所以存在屏幕适配问题，使用dp也有问题

举例：现在基本上手机屏幕是  1280 x 1920  5in  标准dpi= 480 ，如果美工的一张图片是30px  ，换成dp = 10

假设：手机是不是5in 就会出现dpi 跟标准不一样，出现适配问题

3、屏幕适配的解决方案

（1）布局组件的适配
    1、使用 dp 为长度单位
    2、使用约束布局
    3、使用match / wrap 、权重等
    4、diments 的使用

（2）限定符 布局的适配

（3）代码的适配 px = density * dp


4、今日头条的适配方案

（1）它是通过修改density值，强行把所有不同尺寸分辨率的手机的宽度dp值改成一个统一的值，这样就解决了所有的适配问题。

（2）比如，设计稿宽度是360px，那么开发这边就会把目标dp值设为360dp，在不同的设备中，动态修改density值，
从而保证(手机像素宽度)px/density这个值始终是360dp,这样的话，就能保证UI在不同的设备上表现一致了。

（3）核心公式：1、当前设备屏幕总宽度（单位为像素）/ 设计图总宽度（单位为 dp) = density

         2、屏幕的总 px 宽度 / density = 屏幕的总 dp 宽度

举例：假设设计图总宽度为 375 dp，一个 View 在这个设计图上的尺寸是 50dp * 50dp，这个 View 的宽度占整个设计图宽度的 13.3% (50 / 375 = 0.133)

屏幕总宽度为 1080 px，根据今日头条的的公式求出 density，1080 / 375 = 2.88 (density)

这个 50dp * 50dp 的 View，系统最后会将高宽都换算成 px，50dp * 2.88 = 144 px (根据公式 dp * density = px)

144 / 1080 = 0.133，View 实际宽度与 屏幕总宽度 的比例和 View 在设计图中的比例一致 (50 / 375 = 0.133)，所以完成了等比例缩放

某些设备总宽度为 1080 px，但是 DPI 可能不同，是否会对今日头条适配方案产生影响？其实这个方案根本没有根据 DPI 求出 density，是根据自己的公式求出的 density，所以这对今日头条的方案没有影响

（4）缺点：这个方案依赖于设计图尺寸，但是项目中的系统控件、三方库控件、等非我们项目自身设计的控件，它们的设计图尺寸并不会和我们项目自身的设计图尺寸一样


5、 使用 smallestWidth 最小宽度限定符 适配

原理：开发者先在项目中根据主流屏幕的 最小宽度 (smallestWidth) 生成一系列 values-sw<N>dp 文件夹 (含有 dimens.xml 文件)，
    当把项目运行到设备上时，系统会根据当前设备屏幕的 最小宽度 (smallestWidth) 去匹配对应的 values-sw<N>dp 文件夹，
    而对应的 values-sw<N>dp 文件夹中的 dimens.xml 文字中的值，又是根据当前设备屏幕的 最小宽度 (smallestWidth) 而定制的，
    所以一定能适配当前设备。








