
一面：1h
1. 单例模式知道不，写一个
2. 智能指针讲一下，shared_ptr循环引用怎么就会内存泄露呢？weak_ptr源码有看过吗？
3. 内存模型
4. 栈和堆的效率
5. 堆和找的区别
6. 数组和链表的区别
7. 算法：leetcode3
反问

二面：1h
1. 讲讲你这项目你做的工作。
2. 又是一个项目，你是怎么想的，怎么设计的
3. 既然你提到了多线程，那讲讲进程和线程的区别
4. 进程间的通信
5. 多进程怎么就不安全了？
6. 数据库中也存在一些不安全的现象，怎么解决
7. 事务是怎么一回事
8. tcp的三次握手过程，为啥不是两次
9. udp怎样能够实现可靠传输
10. 为啥网络要分层设计
11. 了解快排吗？说一下
12. 算法：两个上升的数组a, b，一个target，找到ai+bj≦target的那两个数
反问

三面：1h50min
我感觉这场面试很多时候我都没正确get到面试官的问题，所以花了很长时间，不然还能从面试官那学到更多！！！面试的时候觉得面试官问的挺深的，但是复盘的时候觉得其实也都是些基础知识。
1. 说一下项目，假装我是一个啥都不懂的人
2. 让你来设计这个项目你会怎么设计，设计流程。
讨论了一下项目细节以及我做的那部分工作
3. 类中的几个基本函数有哪些
4. 什么情况下我们一定要有拷贝构造函数(我打了个比方，string类就一定要有)。你这说的是一种情况，那你总结一下，什么情况下一定要有拷贝构造函数。你怎么突然想到了呢？(我开始纠结了半天一直没想到什么情况) 拷贝构造函数的应用场景。（函数传参、返回值）
6. virtual方面的问题，主要考察动态绑定和静态绑定这一块
7. 内存模型说一下。随便写了个函数，分析一下他们都存放在哪些位置。
8. 栈和堆的区别
9. 栈和堆的效率谁高(一面问过，当时没回答对，又问了一次，然后回答的还是之前的那个答案) 面试官开始引导我找出正确答案 alloca也可以分配栈空间啊
10. 栈是怎么存储的？堆又是怎么存储的？ 栈是怎么分配内存的？堆又是怎么分配内存的？堆的数据结构是啥？
11. 那你现在再看看为啥栈的效率高些，答案不是出来了么
12. 看看下面的代码，你觉得运行会咋样
class a{
char ch;
int b;

public:
virtual void func(){
cout << "func" << endl;
}
void func1() {
cout << "func1" << endl;
}
void func2(){
cout << "func2" << endl;
cout << b << endl;
}
};
a *p = nullptr;
p->func(); // 异常，没有构造对象也就没有办法获取到指向虚表的指针，那么就没有办法得到虚函数的地址
p->func1(); // 正常运行
p->func2(); // 异常，类的成员变量没有初始化

12.
a *p = new a;
sizeof(p);
sizeof(*p);
这两的输出结果是多少？如果把int改成long呢？

13. 要是没有sizeof能不能确定long的大小？如何求？(我最开始以为是通过上面的类中的long的大小，想了半天也没想出来，然后开始了面试官漫长的提示)
14.
struct A{
char ch:
int n;
};
A a;
A b;
A* ptr = new A;
他们的地址谁大谁小？a.ch和a.n谁大谁小？ptr->ch和ptr->n谁大谁小？a和ptr谁大谁小？
15 . 回到刚刚的long ，你再求，一句话的事。估计让你写sizeof也写不出来，这个就过了。
16. int a[][] 用new分配和释放一下内存
17. 说说数据结构有哪些。这些数据结构的应用场景是啥
18. 堆排序说一下
19. 算法: topK问题
反问